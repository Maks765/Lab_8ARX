#include <iostream>

int main() {
    long factorials[8]; // Масив для зберігання факторіалів

    __asm {
        mov EDX, 1               // Лічильник для n, починаємо з 1
        mov ECX, 8               // Кількість ітерацій (факторіали від 1 до 8)
        lea EBX, factorials      // Адреса масиву факторіалів

        calc_factorial :
        mov EAX, 1               // Ініціалізуємо EAX для обчислення факторіалу (початкове значення факторіалу для n)
            mov ESI, EDX             // Копіюємо n в ESI (це буде поточне число для обчислення факторіалу)

            factorial_loop :
        imul EAX, ESI            // EAX = EAX * ESI (множимо на поточне n)
            dec ESI                  // Зменшуємо n
            jnz factorial_loop       // Повертаємось до циклу, поки n > 0

            mov[EBX], EAX           // Зберігаємо результат у масив (EAX містить факторіал для поточного числа)
            add EBX, 4               // Переходимо до наступної позиції масиву (4 байти для кожного елемента масиву)
            inc EDX                  // Збільшуємо n для наступного факторіалу
            loop calc_factorial      // Зменшуємо ECX і повторюємо, поки ECX != 0
    }

    // Виведення результатів
    std::cout << "Факторіали чисел від 1 до 8:" << std::endl;
    for (int i = 0; i < 8; ++i) {
        std::cout << "F(" << (i + 1) << ") = " << factorials[i] << std::endl;
    }

    return 0;
}



